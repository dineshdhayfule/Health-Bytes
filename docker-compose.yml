version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: healthbites-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: healthbites123
      MONGO_INITDB_DATABASE: healthbites
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - healthbites-network

  # Backend API Service
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: healthbites-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      Mongo_url: mongodb://admin:healthbites123@mongodb:27017/healthbites?authSource=admin
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mongodb
    volumes:
      - ./Backend/uploads:/app/uploads
    networks:
      - healthbites-network
    healthcheck:
      test: [ "CMD", "node", "healthcheck.js" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web Application
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: healthbites-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      VITE_BACKEND_URL: http://localhost:3000
    depends_on:
      - backend
    networks:
      - healthbites-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: healthbites-proxy
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
      - backend
    networks:
      - healthbites-network

volumes:
  mongodb_data:
    driver: local

networks:
  healthbites-network:
    driver: bridge
